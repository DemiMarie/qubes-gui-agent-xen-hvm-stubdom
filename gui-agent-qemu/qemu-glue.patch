Index: qemu/Makefile.objs
===================================================================
--- qemu.orig/Makefile.objs
+++ qemu/Makefile.objs
@@ -115,6 +115,7 @@ common-obj-y += replay/
 
 common-obj-y += ui/
 common-obj-m += ui/
+common-obj-y += gui-agent/
 common-obj-y += bt-host.o bt-vhci.o
 bt-host.o-cflags := $(BLUEZ_CFLAGS)
 
Index: qemu/qapi/ui.json
===================================================================
--- qemu.orig/qapi/ui.json
+++ qemu/qapi/ui.json
@@ -1048,6 +1048,21 @@
    'data'    : [ 'off', 'on', 'core', 'es' ] }
 
 ##
+# @DisplayQubesGUI:
+#
+# QubesGUI display options.
+#
+# @log-level: Log level
+# @domid: Domain ID of backend (gui-daemon)
+#
+# Since: 3.0
+#
+##
+{ 'struct'  : 'DisplayQubesGUI',
+  'data'    : { '*log-level': 'int',
+                'domid'     : 'int' } }
+
+##
 # @DisplayType:
 #
 # Display (user interface) type.
@@ -1057,7 +1072,8 @@
 ##
 { 'enum'    : 'DisplayType',
   'data'    : [ 'default', 'none', 'gtk', 'sdl',
-                'egl-headless', 'curses', 'cocoa' ] }
+                'egl-headless', 'curses', 'cocoa',
+                'qubes-gui' ] }
 
 ##
 # @DisplayOptions:
@@ -1078,4 +1094,5 @@
                 '*window-close'  : 'bool',
                 '*gl'            : 'DisplayGLMode' },
   'discriminator' : 'type',
-  'data'    : { 'gtk'            : 'DisplayGTK' } }
+  'data'    : { 'gtk'            : 'DisplayGTK',
+                'qubes-gui'       : 'DisplayQubesGUI' } }
Index: qemu/hw/display/vga.c
===================================================================
--- qemu.orig/hw/display/vga.c
+++ qemu/hw/display/vga.c
@@ -1549,6 +1549,8 @@ static void vga_draw_graphic(VGACommonSt
     } else {
         share_surface = false;
     }
+    /* XXX: Qubes GUI can't use a shared buffer */
+    share_surface = false;
 
     if (s->line_offset != s->last_line_offset ||
         disp_width != s->last_width ||
Index: qemu/include/ui/console.h
===================================================================
--- qemu.orig/include/ui/console.h
+++ qemu/include/ui/console.h
@@ -140,6 +140,7 @@ struct DisplaySurface {
     GLenum gltype;
     GLuint texture;
 #endif
+    uint32_t *xen_refs;
 };
 
 typedef struct QemuUIInfo {
@@ -365,6 +366,11 @@ static inline pixman_format_code_t surfa
     return s->format;
 }
 
+static inline uint32_t *surface_xen_refs(DisplaySurface *s)
+{
+    return s->xen_refs;
+}
+
 typedef uint32_t console_ch_t;
 
 static inline void console_write_ch(console_ch_t *dest, uint32_t ch)
Index: qemu/ui/console.c
===================================================================
--- qemu.orig/ui/console.c
+++ qemu/ui/console.c
@@ -24,6 +24,7 @@
 
 #include "qemu/osdep.h"
 #include "ui/console.h"
+#include "gui-agent/include/qubes-gui-qemu.h"
 #include "hw/qdev-core.h"
 #include "qapi/error.h"
 #include "qapi/qapi-commands-ui.h"
@@ -1342,9 +1343,11 @@ static void qemu_alloc_display(DisplaySu
     surface->image = NULL;
 
     surface->format = PIXMAN_x8r8g8b8;
+    uint8_t *data = qubesgui_alloc_surface_data(width, height, &surface->xen_refs);
+    assert(data != NULL);
     surface->image = pixman_image_create_bits(surface->format,
                                               width, height,
-                                              NULL, width * 4);
+                                              (uint32_t *)data, width * 4);
     assert(surface->image != NULL);
 
     surface->flags = QEMU_ALLOCATED_FLAG;
